!function(t){var e=window.webpackHotUpdate;window.webpackHotUpdate=function(t,n){!function(t,e){if(!w[t]||!x[t])return;for(var n in x[t]=!1,e)Object.prototype.hasOwnProperty.call(e,n)&&(f[n]=e[n]);0==--y&&0===v&&M()}(t,n),e&&e(t,n)};var n,r=!0,i="8c91b1005e40fbc55aff",o={},s=[],a=[];function h(t){var e=O[t];if(!e)return T;var r=function(r){return e.hot.active?(O[r]?-1===O[r].parents.indexOf(t)&&O[r].parents.push(t):(s=[t],n=r),-1===e.children.indexOf(r)&&e.children.push(r)):(console.warn("[HMR] unexpected require("+r+") from disposed module "+t),s=[]),T(r)},i=function(t){return{configurable:!0,enumerable:!0,get:function(){return T[t]},set:function(e){T[t]=e}}};for(var o in T)Object.prototype.hasOwnProperty.call(T,o)&&"e"!==o&&"t"!==o&&Object.defineProperty(r,o,i(o));return r.e=function(t){return"ready"===d&&p("prepare"),v++,T.e(t).then(e,(function(t){throw e(),t}));function e(){v--,"prepare"===d&&(b[t]||S(t),0===v&&0===y&&M())}},r.t=function(t,e){return 1&e&&(t=r(t)),T.t(t,-2&e)},r}function l(e){var r={_acceptedDependencies:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_selfInvalidated:!1,_disposeHandlers:[],_main:n!==e,active:!0,accept:function(t,e){if(void 0===t)r._selfAccepted=!0;else if("function"==typeof t)r._selfAccepted=t;else if("object"==typeof t)for(var n=0;n<t.length;n++)r._acceptedDependencies[t[n]]=e||function(){};else r._acceptedDependencies[t]=e||function(){}},decline:function(t){if(void 0===t)r._selfDeclined=!0;else if("object"==typeof t)for(var e=0;e<t.length;e++)r._declinedDependencies[t[e]]=!0;else r._declinedDependencies[t]=!0},dispose:function(t){r._disposeHandlers.push(t)},addDisposeHandler:function(t){r._disposeHandlers.push(t)},removeDisposeHandler:function(t){var e=r._disposeHandlers.indexOf(t);e>=0&&r._disposeHandlers.splice(e,1)},invalidate:function(){switch(this._selfInvalidated=!0,d){case"idle":(f={})[e]=t[e],p("ready");break;case"ready":P(e);break;case"prepare":case"check":case"dispose":case"apply":(g=g||[]).push(e)}},check:C,apply:I,status:function(t){if(!t)return d;c.push(t)},addStatusHandler:function(t){c.push(t)},removeStatusHandler:function(t){var e=c.indexOf(t);e>=0&&c.splice(e,1)},data:o[e]};return n=void 0,r}var c=[],d="idle";function p(t){d=t;for(var e=0;e<c.length;e++)c[e].call(null,t)}var u,f,m,g,y=0,v=0,b={},x={},w={};function k(t){return+t+""===t?+t:t}function C(t){if("idle"!==d)throw new Error("check() is only allowed in idle status");return r=t,p("check"),(e=1e4,e=e||1e4,new Promise((function(t,n){if("undefined"==typeof XMLHttpRequest)return n(new Error("No browser support"));try{var r=new XMLHttpRequest,o=T.p+""+i+".hot-update.json";r.open("GET",o,!0),r.timeout=e,r.send(null)}catch(t){return n(t)}r.onreadystatechange=function(){if(4===r.readyState)if(0===r.status)n(new Error("Manifest request to "+o+" timed out."));else if(404===r.status)t();else if(200!==r.status&&304!==r.status)n(new Error("Manifest request to "+o+" failed."));else{try{var e=JSON.parse(r.responseText)}catch(t){return void n(t)}t(e)}}}))).then((function(t){if(!t)return p(j()?"ready":"idle"),null;x={},b={},w=t.c,m=t.h,p("prepare");var e=new Promise((function(t,e){u={resolve:t,reject:e}}));f={};return S(0),"prepare"===d&&0===v&&0===y&&M(),e}));var e}function S(t){w[t]?(x[t]=!0,y++,function(t){var e=document.createElement("script");e.charset="utf-8",e.src=T.p+""+t+"."+i+".hot-update.js",document.head.appendChild(e)}(t)):b[t]=!0}function M(){p("ready");var t=u;if(u=null,t)if(r)Promise.resolve().then((function(){return I(r)})).then((function(e){t.resolve(e)}),(function(e){t.reject(e)}));else{var e=[];for(var n in f)Object.prototype.hasOwnProperty.call(f,n)&&e.push(k(n));t.resolve(e)}}function I(e){if("ready"!==d)throw new Error("apply() is only allowed in ready status");return function e(r){var a,h,l,c,d;function u(t){for(var e=[t],n={},r=e.map((function(t){return{chain:[t],id:t}}));r.length>0;){var i=r.pop(),o=i.id,s=i.chain;if((c=O[o])&&(!c.hot._selfAccepted||c.hot._selfInvalidated)){if(c.hot._selfDeclined)return{type:"self-declined",chain:s,moduleId:o};if(c.hot._main)return{type:"unaccepted",chain:s,moduleId:o};for(var a=0;a<c.parents.length;a++){var h=c.parents[a],l=O[h];if(l){if(l.hot._declinedDependencies[o])return{type:"declined",chain:s.concat([h]),moduleId:o,parentId:h};-1===e.indexOf(h)&&(l.hot._acceptedDependencies[o]?(n[h]||(n[h]=[]),y(n[h],[o])):(delete n[h],e.push(h),r.push({chain:s.concat([h]),id:h})))}}}}return{type:"accepted",moduleId:t,outdatedModules:e,outdatedDependencies:n}}function y(t,e){for(var n=0;n<e.length;n++){var r=e[n];-1===t.indexOf(r)&&t.push(r)}}j();var v={},b=[],x={},C=function(){console.warn("[HMR] unexpected require("+M.moduleId+") to disposed module")};for(var S in f)if(Object.prototype.hasOwnProperty.call(f,S)){var M;d=k(S),M=f[S]?u(d):{type:"disposed",moduleId:S};var I=!1,P=!1,_=!1,A="";switch(M.chain&&(A="\nUpdate propagation: "+M.chain.join(" -> ")),M.type){case"self-declined":r.onDeclined&&r.onDeclined(M),r.ignoreDeclined||(I=new Error("Aborted because of self decline: "+M.moduleId+A));break;case"declined":r.onDeclined&&r.onDeclined(M),r.ignoreDeclined||(I=new Error("Aborted because of declined dependency: "+M.moduleId+" in "+M.parentId+A));break;case"unaccepted":r.onUnaccepted&&r.onUnaccepted(M),r.ignoreUnaccepted||(I=new Error("Aborted because "+d+" is not accepted"+A));break;case"accepted":r.onAccepted&&r.onAccepted(M),P=!0;break;case"disposed":r.onDisposed&&r.onDisposed(M),_=!0;break;default:throw new Error("Unexception type "+M.type)}if(I)return p("abort"),Promise.reject(I);if(P)for(d in x[d]=f[d],y(b,M.outdatedModules),M.outdatedDependencies)Object.prototype.hasOwnProperty.call(M.outdatedDependencies,d)&&(v[d]||(v[d]=[]),y(v[d],M.outdatedDependencies[d]));_&&(y(b,[M.moduleId]),x[d]=C)}var E,X=[];for(h=0;h<b.length;h++)d=b[h],O[d]&&O[d].hot._selfAccepted&&x[d]!==C&&!O[d].hot._selfInvalidated&&X.push({module:d,parents:O[d].parents.slice(),errorHandler:O[d].hot._selfAccepted});p("dispose"),Object.keys(w).forEach((function(t){!1===w[t]&&function(t){delete installedChunks[t]}(t)}));var Y,D,z=b.slice();for(;z.length>0;)if(d=z.pop(),c=O[d]){var q={},L=c.hot._disposeHandlers;for(l=0;l<L.length;l++)(a=L[l])(q);for(o[d]=q,c.hot.active=!1,delete O[d],delete v[d],l=0;l<c.children.length;l++){var H=O[c.children[l]];H&&((E=H.parents.indexOf(d))>=0&&H.parents.splice(E,1))}}for(d in v)if(Object.prototype.hasOwnProperty.call(v,d)&&(c=O[d]))for(D=v[d],l=0;l<D.length;l++)Y=D[l],(E=c.children.indexOf(Y))>=0&&c.children.splice(E,1);p("apply"),void 0!==m&&(i=m,m=void 0);for(d in f=void 0,x)Object.prototype.hasOwnProperty.call(x,d)&&(t[d]=x[d]);var $=null;for(d in v)if(Object.prototype.hasOwnProperty.call(v,d)&&(c=O[d])){D=v[d];var N=[];for(h=0;h<D.length;h++)if(Y=D[h],a=c.hot._acceptedDependencies[Y]){if(-1!==N.indexOf(a))continue;N.push(a)}for(h=0;h<N.length;h++){a=N[h];try{a(D)}catch(t){r.onErrored&&r.onErrored({type:"accept-errored",moduleId:d,dependencyId:D[h],error:t}),r.ignoreErrored||$||($=t)}}}for(h=0;h<X.length;h++){var U=X[h];d=U.module,s=U.parents,n=d;try{T(d)}catch(t){if("function"==typeof U.errorHandler)try{U.errorHandler(t)}catch(e){r.onErrored&&r.onErrored({type:"self-accept-error-handler-errored",moduleId:d,error:e,originalError:t}),r.ignoreErrored||$||($=e),$||($=t)}else r.onErrored&&r.onErrored({type:"self-accept-errored",moduleId:d,error:t}),r.ignoreErrored||$||($=t)}}if($)return p("fail"),Promise.reject($);if(g)return e(r).then((function(t){return b.forEach((function(e){t.indexOf(e)<0&&t.push(e)})),t}));return p("idle"),new Promise((function(t){t(b)}))}(e=e||{})}function j(){if(g)return f||(f={}),g.forEach(P),g=void 0,!0}function P(e){Object.prototype.hasOwnProperty.call(f,e)||(f[e]=t[e])}var O={};function T(e){if(O[e])return O[e].exports;var n=O[e]={i:e,l:!1,exports:{},hot:l(e),parents:(a=s,s=[],a),children:[]};return t[e].call(n.exports,n,n.exports,h(e)),n.l=!0,n.exports}T.m=t,T.c=O,T.d=function(t,e,n){T.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},T.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},T.t=function(t,e){if(1&e&&(t=T(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(T.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)T.d(n,r,function(e){return t[e]}.bind(null,r));return n},T.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return T.d(e,"a",e),e},T.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},T.p="/",T.h=function(){return i},h(4)(T.s=4)}([function(t,e,n){(e=n(3)(!1)).push([t.i,"/* http://meyerweb.com/eric/tools/css/reset/ \r\n   v2.0 | 20110126\r\n   License: none (public domain)\r\n*/\r\n\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed, \r\nfigure, figcaption, footer, header, hgroup, \r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tborder: 0;\r\n\tfont-size: 100%;\r\n\tfont: inherit;\r\n\tvertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure, \r\nfooter, header, hgroup, menu, nav, section {\r\n\tdisplay: block;\r\n}\r\nbody {\r\n\tline-height: 1;\r\n}\r\nol, ul {\r\n\tlist-style: none;\r\n}\r\nblockquote, q {\r\n\tquotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n\tcontent: '';\r\n\tcontent: none;\r\n}\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}",""]),t.exports=e},function(t,e,n){(e=n(3)(!1)).push([t.i,"html {\r\n  box-sizing: border-box;\r\n}\r\n*, *:before, *:after {\r\n  box-sizing: inherit;\r\n}\r\n\r\n@font-face {\r\n    font-family: 'Roboto';\r\n    src: url('/public/font/Roboto-Regular-webfont.ttf') format('truetype');\r\n    font-weight: 400;\r\n    font-style: normal;\r\n}\r\n\r\nbody {\r\n    background: #eee;\r\n    min-height: 100vh;\r\n    font-family: \"Roboto\", sans-serif;\r\n}\r\n\r\n#app{\r\n  display: flex;\r\n  min-height: 100vh;\r\n}\r\n\r\n#wrapper{\r\n  box-shadow: 0px 0px 6px #333;\r\n  margin:auto;\r\n  position: relative;\r\n}\r\n\r\n#wrapper canvas{\r\n  display: block;\r\n}\r\n\r\n.coords {\r\n  font-size: 1rem;\r\n  color:#666;\r\n  margin:0 0.5rem 0 0;\r\n  display:inline-block;\r\n  white-space: nowrap;\r\n}\r\n\r\n.coords div {\r\n  height:var(--tile-size);\r\n  text-align: center;\r\n}\r\n\r\n.lang {\r\n  font-weight: bold;\r\n}\r\n\r\n#top-coords {\r\n  position: absolute;\r\n  left:0;\r\n  top:-1.5rem;\r\n}\r\n\r\n#top-coords div,\r\n#bottom-coords div{\r\n  display: inline-block;\r\n  height:auto;\r\n  width:var(--tile-size);\r\n  text-align: center;\r\n}\r\n\r\n#left-coords div,\r\n#right-coords div{\r\n  line-height:var(--tile-size);\r\n  vertical-align: middle;\r\n}\r\n\r\n\r\n#left-coords {\r\n  position: absolute;\r\n  left:-2rem;\r\n  top:0;\r\n}\r\n\r\n#right-coords{\r\n  position: absolute;\r\n  right:-2rem;  \r\n  top:0;\r\n}\r\n\r\n#bottom-coords{\r\n  position: absolute;\r\n  bottom:-1.5rem;\r\n  left:0;\r\n}\r\n\r\n#top-coords:before,\r\n#bottom-coords:before,\r\n#left-coords:before,\r\n#right-coords:before {\r\n  position: absolute;\r\n  font-weight: bold;\r\n  background: #aaa;\r\n  color:#fff;\r\n  font-size: 1rem;\r\n  width: 22px;\r\n  height: 22px;\r\n  line-height: 24px;\r\n  text-align: center;\r\n  vertical-align: middle;\r\n}\r\n\r\n#top-coords:before {\r\n  content: 'X';\r\n  left: 50%;\r\n  top: 0;\r\n  margin: -2.5rem 0 0 0;\r\n  transform: translateX(-50%);\r\n}\r\n\r\n#bottom-coords:before {\r\n  content: 'X';\r\n  left: 50%;\r\n  bottom: 0;\r\n  margin: 0 0 -2.5rem 0;\r\n  transform: translateX(-50%);\r\n}\r\n\r\n#left-coords:before {\r\n  content: 'Y';\r\n  top: 50%;\r\n  left: 0;\r\n  margin: 0 0 0 -2.5rem;\r\n  transform: translateY(-50%);\r\n}\r\n\r\n#right-coords:before {\r\n  content: 'Y';\r\n  top: 50%;\r\n  left: auto;\r\n  right:0;\r\n  margin: 0 -2.5rem 0 0;\r\n  transform: translateY(-50%);\r\n}\r\n\r\n#toggle-mode {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  box-shadow: 0px 0px 6px #666;\r\n  background: #c4c4c4;\r\n  padding: 1.2rem;\r\n  height: 4.5rem;\r\n  width: 8rem;\r\n  text-align: center;\r\n  transition: background 400ms ease;\r\n  cursor: pointer;\r\n}\r\n\r\n.meta-show-simulation-controls #toggle-mode .simulation {\r\n  display: block;\r\n}\r\n\r\n.meta-show-game-controls #toggle-mode .game {\r\n  display: block;\r\n}\r\n\r\n#toggle-mode:hover{\r\n  background: #aaa;\r\n}\r\n\r\n#toggle-mode span {\r\n  display: none;\r\n  position: absolute;\r\n  left: 0;\r\n  color: #000;\r\n  right: 0;\r\n  font-size:1rem;\r\n  top:50%;\r\n  transform: translateY(-50%);\r\n}\r\n\r\n#controls .simulation-controls {\r\n  display: none;\r\n}\r\n\r\n.meta-show-simulation-controls #controls .simulation-controls {\r\n  display: block;\r\n}\r\n\r\n\r\n#controls .game-controls {\r\n  display: none;\r\n}\r\n\r\n.meta-show-game-controls #controls .game-controls {\r\n  display: block;\r\n}\r\n\r\n#controls .game-controls.finish .reset-game {\r\n  display: block;\r\n}\r\n\r\n#controls .game-controls .reset-game {\r\n  position: absolute;\r\n  right:2rem;\r\n  top:50%;\r\n  transform:translateY(-50%);\r\n  padding:1rem 2rem;\r\n  font-size: 1.4rem;\r\n  display: none;\r\n}\r\n\r\n.game-controls .info {\r\n  color: #333;\r\n  font-size: .9rem;\r\n  padding:0.2rem;\r\n  display: inline-block;\r\n}\r\n\r\n.game-controls .results {\r\n  margin-left: 2rem;\r\n  display: inline-block;\r\n}\r\n\r\n.game-controls .result {  \r\n  display: inline-block;\r\n  margin-right: 0.5rem;\r\n}\r\n\r\n.game-controls .result:not(:last-child) {  \r\n  padding-right:.5rem;\r\n  border-right:1px solid #666;\r\n}\r\n\r\n.game-controls .results:before {\r\n  content:'Results';\r\n  position: absolute;\r\n  color: #333;\r\n  text-transform: uppercase;\r\n  font-size: .9rem;\r\n  top:0.6rem;\r\n}\r\n\r\n.game-controls .results:empty:after {\r\n  content:'No previous commands';\r\n  color: #333;\r\n  text-transform: uppercase;\r\n  font-size: .9rem;\r\n  top:0.6rem;\r\n}\r\n\r\n#credits {\r\n  position: fixed;\r\n  bottom:0;\r\n  left:0;\r\n  right:0;\r\n  color:#eee;\r\n  height: 24px;\r\n  line-height: 24px;\r\n  text-transform: uppercase;\r\n  vertical-align: middle;\r\n  background: #333;\r\n  text-align: center;\r\n  font-size: 0.8rem;\r\n}\r\n\r\n#controls {\r\n  display: block;\r\n  background: #fff;\r\n  box-shadow: 0px 0px 6px #333;\r\n  position: fixed;\r\n  bottom:24px;\r\n  left:0;\r\n  right:0;\r\n  padding:1rem;\r\n}\r\n\r\n#controls .controls-wrapper > div:before{\r\n  position: absolute;\r\n  left: 1.2rem;\r\n  top: .6rem;\r\n  color: #333;\r\n  text-transform: uppercase;\r\n  font-size: .9rem;\r\n}\r\n\r\n#controls .simulation-controls:before {\r\n  content:'Simulation mode';\r\n}\r\n\r\n#controls .game-controls:before {\r\n  content:'Game mode';\r\n}\r\n\r\n.controls-wrapper{\r\n  padding:1.5rem 0 .5rem 0;\r\n}\r\n\r\n.button, .button:link,.button:visited {\r\n  padding:0.4rem 1rem;\r\n  background: #666;\r\n  color:#eee;\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n  transition: background-color 400ms ease, color 400ms ease;\r\n  display: inline-block;\r\n}\r\n\r\n.button:hover{\r\n  background: #373737;\r\n}\r\n\r\n.selectbox-wrapper{\r\n  position: fixed;\r\n  top:0;\r\n  left:50%;\r\n  transform:translateX(-50%);\r\n}\r\n\r\n.selectbox {\r\n  position: relative;\r\n  background: #aaa;\r\n  box-shadow: 0px 0px 6px #666;\r\n  display: inline-block;\r\n  margin:0 3rem 0 0;\r\n}\r\n\r\n.selectbox:last-of-type{\r\n  margin-right: 0;\r\n}\r\n\r\n.selectbox select{\r\n  padding:1.8rem 1rem 1.3rem 1rem;\r\n  font-size: 1rem;\r\n  background: #aaa;\r\n  border:1px solid #aea8a8;\r\n  display: block;\r\n  min-width: 180px;\r\n}\r\n\r\n.selectbox:before{\r\n  position: absolute;\r\n  left:1.2rem;\r\n  top:.6rem;\r\n  color:#fff;\r\n  text-transform: uppercase;\r\n  font-size: .75rem;\r\n}\r\n\r\n#maps:before{\r\n  content:'Choose a map';\r\n}\r\n\r\n#algorithms:before{\r\n  content:'Select algorithm';\r\n}\r\n\r\n#info-control {\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  box-shadow: 0px 0px 6px #666;\r\n  background: #c4c4c4;\r\n  padding: 1.2rem;\r\n  height: 4.5rem;\r\n  width: 8rem;\r\n  text-align: center;\r\n  transition: background 400ms ease;\r\n  cursor: pointer;\r\n}\r\n\r\n#info-control span {\r\n  position: absolute;\r\n  left: 0;\r\n  color: #000;\r\n  right: 0;\r\n  font-size: 1rem;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n}\r\n\r\n#info {\r\n  position: fixed;\r\n  z-index: 999;\r\n  left:50%;\r\n  top:50%;\r\n  transform:translateX(-50%) translateY(-50%);\r\n  padding:1rem;\r\n  background: #fff;\r\n  min-height:20rem;  \r\n  box-shadow: 0px 0px 6px #eee;\r\n  display: none;\r\n}\r\n\r\n#info h1 {\r\n  font-weight:bold;\r\n  margin:0 0 1rem 0;\r\n  font-size: 1.2rem;\r\n}\r\n\r\n#info h2 {\r\n  font-weight: bold;\r\n  margin:0 0 0.4rem 0;\r\n}\r\n\r\n#info p {\r\n  line-height: 120%;\r\n  color:#222;\r\n}\r\n\r\n#info p + h2 {\r\n  margin-top:0.8rem;\r\n}\r\n\r\n\r\nhtml.meta-show-info #overlay:before{\r\n  content:'';\r\n  position: fixed;\r\n  left:0;\r\n  right:0;\r\n  bottom:0;\r\n  top:0;\r\n  z-index:1;\r\n  background: rgba(0,0,0,0.4);\r\n}\r\n\r\nhtml.meta-show-info #info {\r\n  display: block;\r\n}",""]),t.exports=e},function(t,e,n){"use strict";var r,i=function(){return void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r},o=function(){var t={};return function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}t[e]=n}return t[e]}}(),s=[];function a(t){for(var e=-1,n=0;n<s.length;n++)if(s[n].identifier===t){e=n;break}return e}function h(t,e){for(var n={},r=[],i=0;i<t.length;i++){var o=t[i],h=e.base?o[0]+e.base:o[0],l=n[h]||0,c="".concat(h," ").concat(l);n[h]=l+1;var d=a(c),p={css:o[1],media:o[2],sourceMap:o[3]};-1!==d?(s[d].references++,s[d].updater(p)):s.push({identifier:c,updater:g(p,e),references:1}),r.push(c)}return r}function l(t){var e=document.createElement("style"),r=t.attributes||{};if(void 0===r.nonce){var i=n.nc;i&&(r.nonce=i)}if(Object.keys(r).forEach((function(t){e.setAttribute(t,r[t])})),"function"==typeof t.insert)t.insert(e);else{var s=o(t.insert||"head");if(!s)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");s.appendChild(e)}return e}var c,d=(c=[],function(t,e){return c[t]=e,c.filter(Boolean).join("\n")});function p(t,e,n,r){var i=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(t.styleSheet)t.styleSheet.cssText=d(e,i);else{var o=document.createTextNode(i),s=t.childNodes;s[e]&&t.removeChild(s[e]),s.length?t.insertBefore(o,s[e]):t.appendChild(o)}}function u(t,e,n){var r=n.css,i=n.media,o=n.sourceMap;if(i?t.setAttribute("media",i):t.removeAttribute("media"),o&&btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),t.styleSheet)t.styleSheet.cssText=r;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(r))}}var f=null,m=0;function g(t,e){var n,r,i;if(e.singleton){var o=m++;n=f||(f=l(e)),r=p.bind(null,n,o,!1),i=p.bind(null,n,o,!0)}else n=l(e),r=u.bind(null,n,e),i=function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)};return r(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;r(t=e)}else i()}}t.exports=function(t,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=i());var n=h(t=t||[],e);return function(t){if(t=t||[],"[object Array]"===Object.prototype.toString.call(t)){for(var r=0;r<n.length;r++){var i=a(n[r]);s[i].references--}for(var o=h(t,e),l=0;l<n.length;l++){var c=a(n[l]);0===s[c].references&&(s[c].updater(),s.splice(c,1))}n=o}}}},function(t,e,n){"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n=function(t,e){var n=t[1]||"",r=t[3];if(!r)return n;if(e&&"function"==typeof btoa){var i=(s=r,a=btoa(unescape(encodeURIComponent(JSON.stringify(s)))),h="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),"/*# ".concat(h," */")),o=r.sources.map((function(t){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(t," */")}));return[n].concat(o).concat([i]).join("\n")}var s,a,h;return[n].join("\n")}(e,t);return e[2]?"@media ".concat(e[2]," {").concat(n,"}"):n})).join("")},e.i=function(t,n,r){"string"==typeof t&&(t=[[null,t,""]]);var i={};if(r)for(var o=0;o<this.length;o++){var s=this[o][0];null!=s&&(i[s]=!0)}for(var a=0;a<t.length;a++){var h=[].concat(t[a]);r&&i[h[0]]||(n&&(h[2]?h[2]="".concat(n," and ").concat(h[2]):h[2]=n),e.push(h))}},e}},function(t,e,n){t.exports=n(7)},function(t,e,n){var r=n(2),i=n(0);"string"==typeof(i=i.__esModule?i.default:i)&&(i=[[t.i,i,""]]);var o={insert:"head",singleton:!1},s=r(i,o);if(!i.locals||t.hot.invalidate){var a=i.locals;t.hot.accept(0,(function(){"string"==typeof(i=(i=n(0)).__esModule?i.default:i)&&(i=[[t.i,i,""]]),function(t,e){if(!t&&e||t&&!e)return!1;var n;for(n in t)if(t[n]!==e[n])return!1;for(n in e)if(!t[n])return!1;return!0}(a,i.locals)?(a=i.locals,s(i)):t.hot.invalidate()}))}t.hot.dispose((function(){s()})),t.exports=i.locals||{}},function(t,e,n){var r=n(2),i=n(1);"string"==typeof(i=i.__esModule?i.default:i)&&(i=[[t.i,i,""]]);var o={insert:"head",singleton:!1},s=r(i,o);if(!i.locals||t.hot.invalidate){var a=i.locals;t.hot.accept(1,(function(){"string"==typeof(i=(i=n(1)).__esModule?i.default:i)&&(i=[[t.i,i,""]]),function(t,e){if(!t&&e||t&&!e)return!1;var n;for(n in t)if(t[n]!==e[n])return!1;for(n in e)if(!t[n])return!1;return!0}(a,i.locals)?(a=i.locals,s(i)):t.hot.invalidate()}))}t.hot.dispose((function(){s()})),t.exports=i.locals||{}},function(t,e,n){"use strict";n.r(e);n(5),n(6);var r=[];r.push({title:"Empty",data:"\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 S 0 0 0 0 0 0 0 0 0 0 0 0 0 D\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    "}),r.push({title:"Single Weight",data:"\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 S 0 0 0 0 0 0 5 0 0 0 0 0 0 D\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    "}),r.push({title:"Weighted",data:"\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 0 0 0 0 0\n    0 0 0 0 0 5 0 0 0 5 0 0 5 0 0 0 0 0 0 5 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 0 0 0 0 0 5\n    0 0 0 5 0 0 0 0 0 0 0 5 0 0 0 0 0 5 0 0 0 0\n    5 0 0 0 0 0 5 0 0 0 5 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 0 0 0 0 5 0\n    0 0 5 0 0 0 0 5 0 0 0 0 0 5 0 0 0 5 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 0 0\n    0 5 0 0 0 0 0 5 0 5 0 5 0 0 0 5 0 0 5 0 0 0\n    0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 0 0 5 0 0 0 0\n    0 0 0 5 0 0 0 S 0 5 0 5 0 0 5 0 0 0 5 0 0 D\n    0 0 0 0 0 0 5 0 0 0 0 0 0 5 0 5 0 0 0 0 0 0\n    5 0 5 0 0 0 0 0 0 5 0 0 0 0 0 0 5 0 0 5 0 0\n    0 0 0 0 5 0 0 0 0 0 0 5 0 0 0 0 5 0 5 0 0 0\n    0 0 0 0 0 0 0 0 0 5 0 0 0 5 0 0 0 5 0 0 5 0\n    0 5 0 0 0 5 0 0 0 0 0 0 0 0 0 0 0 0 5 0 0 0\n    0 5 0 0 0 0 0 5 0 5 0 0 0 0 0 5 0 0 0 0 0 5\n    0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 5 0 0 5 0 5 0 0 0 0 5 0 0 0 0 0 5 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    "}),r.push({title:"Vertical Wall",data:"\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n    0 0 S 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 D 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    "}),r.push({title:"C-shaped Wall",data:"\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 8 8 8 8 8 8 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 D 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n    0 0 S 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 8 8 8 8 8 8 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n"}),r.push({title:"Stairs",data:"\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 8 0 8 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 8 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 8 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n    8 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 S 0 0 0 0 0 8 0 0 0 0 0 0 0 D 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 8 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8 0 0 0 8 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8 0 8 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n"}),r.push({title:"Complex",data:"\n    0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n    0 S 0 0 0 0 0 0 0 0 8 0 0 8 8 8 8 8 8 8 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 8 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 8 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 8 0 0 0 0 0 8 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 8 0 0 0 0 0 8 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 8 8 8 8 8 8 8 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 8 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 8 0 0 0 0 0 0 0 0\n    8 8 0 8 8 8 8 8 8 8 8 0 0 8 8 8 0 8 8 8 8 8\n    0 0 0 0 0 0 0 0 0 0 8 0 0 8 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 8 0 8 8 8 8 8 8 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 8 0 0 0 0 0 0 8 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 8 0 8 8 8 8 0 8 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 8 0 8 0 D 8 0 8 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 8 0 8 0 8 8 0 8 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 8 0 8 0 0 0 0 8 0\n    0 0 0 0 0 0 0 0 0 0 0 0 0 8 0 8 8 8 8 8 8 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 8 0 0 0 0 0 0 0 0\n"}),r.push({title:"Impossible",data:"\n    0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n    0 0 S 0 0 0 0 0 0 0 8 0 0 D 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n"});var i=r;function o(t,e){this.x=t,this.y=e,this.f=0,this.g=0,this.h=0,this.parent}o.prototype.equals=function(t){return this.constructor===t.constructor&&(this.x==t.x&&this.y==t.y)},o.prototype.clone=function(){var t=new o(this.x,this.y);return t.f=this.f,t.g=this.g,t.h=this.h,t.parent=this.parent,this.next&&(t.next=this.next.clone()),t};var s=o;function a(t,e,n,r,i){this.P=new s(t,e),this.G=new s(n,r),this.map=i,this.calculateCostsForNode(this.P)}function h(t,e){var n={contains:!1};return t.forEach((function(t){if(e.equals(t))return n.contains=!0,n.node=e,!1})),n}a.prototype.getCostFromStartToNode=function(t){return Math.abs(this.G.x-t.x)+Math.abs(this.G.y-t.y)},a.prototype.getEstimatedCostFromStartToNode=function(t){return t.parent?t.parent.g+this.map.getCoordCost(t.x,t.y)+1:0},a.prototype.calculateCostsForNode=function(t){t.g=this.getEstimatedCostFromStartToNode(t),t.h=this.getCostFromStartToNode(t),t.f=t.g+t.h},a.prototype.run=function(){this.OpenList=[this.P],this.ClosedList=[],this.B={},this.C={},this.probes=[],this.paths=[];t:for(;0!=this.OpenList.length;){this.OpenList=this.OpenList.sort((t,e)=>parseFloat(t.f)-parseFloat(e.f));var t=this.OpenList.shift();this.ClosedList.push(t);var e=this.getConnectedNodes(t);e=e.sort((t,e)=>t.f>e.f);for(var n=0;n<e.length;n++){var r=e[n];this.calculateCostsForNode(r);var i=h(this.OpenList,r),o=h(this.ClosedList,r);if(this.probes.push({x:r.x,y:r.y}),r.equals(this.G)){for(var s=r,a=s.parent;s.parent;)this.paths.push({x:s.x,y:s.y}),a=(s=a).parent;this.paths.push({x:s.x,y:s.y});break t}if(i.contains){if(r.f>=i.node.f)continue}else if(o.contains){if(r.f>=o.node.f)continue;this.OpenList.push(r)}else this.OpenList.push(r)}}return{found:this.paths.length>0,paths:this.paths,probes:this.probes}},a.prototype.getConnectedNodes=function(t){var e,n=[];this.map.isValidCoord(t.x,t.y-1)&&((e=new s(t.x,t.y-1)).parent=t,n.push(e));this.map.isValidCoord(t.x,t.y+1)&&((e=new s(t.x,t.y+1)).parent=t,n.push(e));this.map.isValidCoord(t.x-1,t.y)&&((e=new s(t.x-1,t.y)).parent=t,n.push(e));this.map.isValidCoord(t.x+1,t.y)&&((e=new s(t.x+1,t.y)).parent=t,n.push(e));return n};var l=a;function c(t,e){this.x=t,this.y=e,this.parent=null,this.distance=1/0,this.selected=!1}c.prototype.equals=function(t){return this.constructor===t.constructor&&(this.x==t.x&&this.y==t.y)},c.prototype.clone=function(){var t=new c(this.x,this.y);return t.parent=this.parent,t.distance=this.distance,t.selected=this.selected,t};var d=c;function p(t,e,n,r,i){this.P=new d(t,e),this.G=new d(n,r),this.map=i}p.prototype.run=function(){this.probes=[],this.paths=[],this.UnexploredList=[];for(let e=0;e<this.map.getWidth();e++)for(let n=0;n<this.map.getHeight();n++)if(this.map.isValidCoord(e,n)){var t=new d(e,n);this.P.equals(t)&&(t.distance=0),this.UnexploredList.push(t)}for(;0!=this.UnexploredList.length;){this.UnexploredList=this.UnexploredList.sort((t,e)=>parseFloat(t.distance)-parseFloat(e.distance));var e=this.UnexploredList.shift();if(e.equals(this.G)){for(var n=e,r=n.parent;n.parent;)this.paths.push({x:n.x,y:n.y}),r=(n=r).parent;this.paths.push({x:n.x,y:n.y});break}for(var i=this.getAdjacentNodes(e),o=0;o<i.length;o++){var s=i[o];this.probes.push({x:s.x,y:s.y});let t=e.distance+this.map.getCoordCost(s.x,s.y)+1;if(t<s.distance){let n=this.findInUnexploredList(s);n.distance=t,n.parent=e}}}return{found:this.paths.length>0,paths:this.paths,probes:this.probes}},p.prototype.findInUnexploredList=function(t){return this.UnexploredList.find(e=>e.equals(t))},p.prototype.isValidAdjacent=function(t,e){return this.map.isValidCoord(t,e)&&this.findInUnexploredList(new d(t,e))},p.prototype.getAdjacentNodes=function(t){var e=[];if(this.isValidAdjacent(t.x,t.y-1)){var n=new d(t.x,t.y-1);e.push(n)}if(this.isValidAdjacent(t.x,t.y+1)){n=new d(t.x,t.y+1);e.push(n)}if(this.isValidAdjacent(t.x-1,t.y)){n=new d(t.x-1,t.y);e.push(n)}if(this.isValidAdjacent(t.x+1,t.y)){n=new d(t.x+1,t.y);e.push(n)}return e},p.prototype.goalReached=function(t){this.stop={finished:!0,found:!0};for(var e=t,n=e.parent;e.parent;)this.drawCalculated(e.x,e.y,n.x,n.y),n=(e=n).parent};var u=p;function f(t,e){this.x=t,this.y=e,this.parent=null}f.prototype.equals=function(t){return this.constructor===t.constructor&&(this.x==t.x&&this.y==t.y)};var m=f;function g(t,e,n,r,i){this.P=new m(t,e),this.G=new m(n,r),this.map=i}g.prototype.run=function(){this.queue=[],this.queue.push(this.P),this.probes=[],this.paths=[],this.visited=[];t:for(;0!=this.queue.length;){var t=this.queue.shift(),e=this.getUnivisitedAdjacentNodes(t);this.visited.push(t);for(var n=0;n<e.length;n++){var r=e[n];if(r.equals(this.G)){for(var i=r,o=i.parent;i.parent;)this.paths.push({x:i.x,y:i.y}),o=(i=o).parent;this.paths.push({x:i.x,y:i.y});break t}this.visited.push(r),this.queue.push(r),this.probes.push({x:r.x,y:r.y})}}return{found:this.paths.length>0,paths:this.paths,probes:this.probes}},g.prototype.isNodeUnivisited=function(t){if(!this.visited.find(e=>e.equals(t)))return!0},g.prototype.isValidAdjacent=function(t,e){return this.map.isValidCoord(t,e)&&this.isNodeUnivisited(new m(t,e))},g.prototype.getUnivisitedAdjacentNodes=function(t){var e,n=[];this.isValidAdjacent(t.x,t.y-1)&&((e=new m(t.x,t.y-1)).parent=t,n.push(e));this.isValidAdjacent(t.x,t.y+1)&&((e=new m(t.x,t.y+1)).parent=t,n.push(e));this.isValidAdjacent(t.x-1,t.y)&&((e=new m(t.x-1,t.y)).parent=t,n.push(e));this.isValidAdjacent(t.x+1,t.y)&&((e=new m(t.x+1,t.y)).parent=t,n.push(e));return n};var y=g;function v(t){let e=t.split("\n"),n=[],r=-1,i=-1,o=-1,s=-1,a=0;if(e.forEach((function(t){if(!t||""==t)return;let e=t.replace(/\s\s+/g," ");if(!e||""==e)return;let h=e.split(" "),l=[],c=0;h.forEach((function(t){if(!t||""==t)return;let e;"S"==t?(e=0,r=c,i=a):"D"==t?(e=0,o=c,s=a):e=parseInt(t,10),l.push(e),c++})),0!=l.length&&(n.push(l),a++)})),this.rawInput=n,-1==r||-1==i)throw"invalid start "+r+" "+i;if(this.startX=r,this.startY=i,-1==o||-1==s)throw"invalid dest "+o+" "+s;this.destX=o,this.destY=s}v.prototype.getCoordCost=function(t,e){return Math.abs(this.rawInput[e][t])},v.prototype.getWidth=function(){return this.rawInput[0].length},v.prototype.getHeight=function(){return this.rawInput.length},v.prototype.forEach=function(t){this.rawInput.forEach((function(e,n){t(e,n)}))},v.prototype.isValidCoord=function(t,e){return!(t<0)&&(!(t>=this.getWidth())&&(!(e<0)&&(!(e>=this.getHeight())&&8!=this.getCoordCost(t,e))))};var b=v;function x(){$("#info-control").click((function(){$("html").addClass("meta-show-info"),$("body").append("<div id='overlay'></div>"),$("#overlay, #info").click((function(){$("#overlay").remove(),$("html").removeClass("meta-show-info")}))}))}x.prototype.handleToggleSimulationMode=function(t){$("#toggle-mode").click((function(){t()}))},x.prototype.handleResetGame=function(t){$(document).keydown((function(e){82==e.which&&t()})),$("#controls .reset-game").click((function(){t()}))},x.prototype.handleResetSimulation=function(t){$("#controls .reset-simulation").click((function(){t()}))},x.prototype.handleRunAlgorithm=function(t){$("#controls .start-simulation").click((function(){t()}))},x.prototype.refreshControls=function(t){$("body").removeClass("meta-show-simulation-controls"),$("body").removeClass("meta-show-game-controls"),t?$("body").addClass("meta-show-simulation-controls"):$("body").addClass("meta-show-game-controls")},x.prototype.addMapToSelection=function(t,e){$("#maps select").append(`<option value='${t}'>${e}</option>`)},x.prototype.handleMapChanged=function(t){$("#maps select").change((function(){t($(this).val())}))},x.prototype.getSelectedMap=function(){return $("#maps select").val()},x.prototype.setSelectedMap=function(t){$("#maps select").val(t)},x.prototype.getSelectedAlgorithm=function(){return $("#algorithms select").val()},x.prototype.setSelectedAlgorithm=function(t){$("#algorithms select").val(t)},x.prototype.handleAlgorithmChanged=function(t){$("#algorithms select").change((function(){t($(this).val())}))};var w=x;function k(t,e,n){document.documentElement.style.setProperty("--tile-size",e+"px"),this.sk=t,this.imgTile,this.imgWall,this.imgSize=e,this.imgWeight,this.map,this.pg,this.width,this.height,this.highlightX=-1,this.highlightY=-1,this.setDest=n}k.prototype.preload=function(){this.imgSize<32?this.imgTile=this.sk.loadImage("public/tiles/tilemap_v1_11.png"):this.imgTile=this.sk.loadImage("public/tiles/tilemap_v1_09.png"),this.imgWall=this.sk.loadImage("public/tiles/tilemap_v1_10.png"),this.imgM5=this.sk.loadImage("public/tiles/tilemap_v1_05.png")},k.prototype.setup=function(t,e){this.map=t;let n=t.getWidth()*this.imgSize;this.width=n;let r=t.getHeight()*this.imgSize;this.height=r;var i=document.getElementById("top-coords");i.innerHTML="";var o=document.getElementById("right-coords");o.innerHTML="";var s=document.getElementById("bottom-coords");s.innerHTML="";var a=document.getElementById("left-coords");a.innerHTML="";for(let e=0;e<t.getHeight();e++){(h=document.createElement("div")).innerText=e,a.append(h),o.append(h.cloneNode(!0))}for(let e=0;e<t.getWidth();e++){var h;(h=document.createElement("div")).innerText=e,i.append(h),s.append(h.cloneNode(!0))}var l=this.sk.createCanvas(n,r);this.pg=this.sk.createGraphics(n,r),l.parent("wrapper"),this.sk.background("#eee");let c=0,d=0,p=this;t.forEach(t=>{c=0,t.forEach(t=>{let e;switch(Math.abs(t)){case 0:e=p.imgTile;break;case 5:e=p.imgM5;break;case 8:e=p.imgWall}p.pg.image(e,c,d,p.imgSize,p.imgSize),c+=p.imgSize}),d+=p.imgSize}),e||l.mouseClicked((function(){p.highlightX<0||p.highlightY<0||(8!=p.map.getCoordCost(p.highlightX,p.highlightY)?p.setDest(p.highlightX,p.highlightY):console.log("wall clicked"))})),this.sk.image(this.pg,0,0,this.width,this.height)},k.prototype.draw=function(t,e,n,r,i,o,s,a){this.sk.clear(),this.sk.image(this.pg,0,0,this.width,this.height),this.mouseOver(),e&&(C=i.length-1),this.drawProbes(i,o),this.drawCalculated(o,i),t||e||this.renderHighlight(),this.renderDestination(n,r),this.renderStart(s,a)},k.prototype.renderStart=function(t,e){this.sk.fill("red"),this.sk.circle(t,e,24)},k.prototype.mouseOver=function(){this.highlightX=this.mouseCoordToCenteredPosition(this.sk.mouseX),this.highlightY=this.mouseCoordToCenteredPosition(this.sk.mouseY)},k.prototype.renderHighlight=function(){-1!=this.highlightX&&-1!=this.highlightY&&(this.sk.fill(0,128,0,50),this.sk.rect(this.coordToPosition(this.highlightX),this.coordToPosition(this.highlightY),this.imgSize))},k.prototype.renderDestination=function(t,e){-1!=t&&-1!=e&&(this.sk.fill("green"),this.sk.circle(this.coordToCenteredPosition(t),this.coordToCenteredPosition(e),24))};let C=0;k.prototype.drawProbes=function(t,e){this.sk.stroke("#eee"),this.sk.strokeWeight(2);for(let n=0;n<t.length&&n!=C;n++){let r=t[n];0==e.length&&C>=t.length?this.sk.fill("red"):this.sk.fill("26","30","30",100),this.sk.rect(this.coordToPosition(r.x),this.coordToPosition(r.y),this.imgSize)}this.sk.stroke("#000"),this.sk.strokeWeight(1),C+=5,C>t.length&&(C=t.length)},k.prototype.drawCalculated=function(t,e){if(!(0==t.length||C<e.length)){this.sk.stroke("#fff"),this.sk.strokeWeight(8);for(let e=0;e<t.length;e++){let n=t[e],r=t[e-1];r||(r={x:n.x,y:n.y}),this.sk.line(this.coordToCenteredPosition(r.x),this.coordToCenteredPosition(r.y),this.coordToCenteredPosition(n.x),this.coordToCenteredPosition(n.y))}this.sk.stroke("#000"),this.sk.strokeWeight(1)}},k.prototype.coordToPosition=function(t){return t*this.imgSize},k.prototype.coordToCenteredPosition=function(t){return this.coordToPosition(t)+this.imgSize/2},k.prototype.mouseCoordToCenteredPosition=function(t){if(t<0)return-1;let e=-1;for(let n=0;n<=this.imgSize*this.map.getWidth()&&!(t/n<1);n+=this.imgSize)e++;return e};var S=k;function M(t,e){this.x=t,this.y=e,this.parent=null}M.prototype.equals=function(t){return this.constructor===t.constructor&&(this.x==t.x&&this.y==t.y)};var I=M;function j(t,e,n,r,i){this.P=new I(t,e),this.G=new I(n,r),this.map=i}j.prototype.run=function(){this.visited=[],this.stack=[],this.stack.push(this.P),this.probes=[],this.paths=[];t:for(;0!=this.stack.length;){var t=this.stack.pop(),e=this.getUnivisitedAdjacentNodes(t);this.visited.push(t);for(var n=0;n<e.length;n++){var r=e[n];if(r.equals(this.G)){for(var i=r,o=i.parent;i.parent;)this.paths.push({x:i.x,y:i.y}),o=(i=o).parent;this.paths.push({x:i.x,y:i.y});break t}this.visited.push(r),this.stack.push(r),this.probes.push({x:r.x,y:r.y})}}return{found:this.paths.length>0,paths:this.paths,probes:this.probes}},j.prototype.isNodeUnivisited=function(t){if(!this.visited.find(e=>e.equals(t)))return!0},j.prototype.isValidAdjacent=function(t,e){return this.map.isValidCoord(t,e)&&this.isNodeUnivisited(new I(t,e))},j.prototype.getUnivisitedAdjacentNodes=function(t){var e,n=[];this.isValidAdjacent(t.x,t.y-1)&&((e=new I(t.x,t.y-1)).parent=t,n.push(e));this.isValidAdjacent(t.x,t.y+1)&&((e=new I(t.x,t.y+1)).parent=t,n.push(e));this.isValidAdjacent(t.x-1,t.y)&&((e=new I(t.x-1,t.y)).parent=t,n.push(e));this.isValidAdjacent(t.x+1,t.y)&&((e=new I(t.x+1,t.y)).parent=t,n.push(e));return n};var P=j;function O(t){this.Interface=new w,this.Canvas=new S(t,28,this.destinationSet.bind(this)),this.selectedMapIndex=0,this.selectedAlgorithmIndex=2,this.simulationMode=!0,this.gameFinished=!1,this.destX=-1,this.destY=-1,this.gameX=-1,this.gameY=-1,this.gameMoveInx=0,this.Interface.handleToggleSimulationMode(this.toggleSimulationMode.bind(this)),this.Interface.handleResetGame(this.resetGame.bind(this)),this.Interface.handleResetSimulation(this.resetSimulation.bind(this)),this.Interface.handleMapChanged(this.mapChanged.bind(this)),this.Interface.handleAlgorithmChanged(this.algorithmChanged.bind(this)),this.Interface.handleRunAlgorithm(this.runAlgorithm.bind(this));let e=this;i.forEach((function(t,n){e.Interface.addMapToSelection(n,t.title)})),this.Interface.setSelectedMap(this.selectedMapIndex),this.Interface.setSelectedAlgorithm(this.selectedAlgorithmIndex)}O.prototype.init=function(){this.algorithm=null,this.gameFinished=!1,this.probes=[],this.paths=[];let t,e,n=i[this.Interface.getSelectedMap()].data;switch(this.map=new b(n),this.gameX=-1,this.gameY=-1,this.gameMoveInx=0,this.simulationMode?(t=this.map.destX,e=this.map.destY):(t=this.destX,e=this.destY),Number(this.selectedAlgorithmIndex)){case 0:this.algorithm=new l(this.map.startX,this.map.startY,t,e,this.map);break;case 1:this.algorithm=new u(this.map.startX,this.map.startY,t,e,this.map);break;case 2:this.algorithm=new y(this.map.startX,this.map.startY,t,e,this.map);break;case 3:this.algorithm=new P(this.map.startX,this.map.startY,t,e,this.map)}this.Interface.refreshControls(this.simulationMode),this.Canvas.setup(this.map)},O.prototype.runAlgorithm=function(){this.init();var t=this.algorithm.run();let e;if(!this.simulationMode){let n=[];for(let e=0;e<1e3;e++){let e=performance.now();t=this.algorithm.run();let r=performance.now()-e;n.push(r)}n=n.sort((t,e)=>t-e),e=n[Math.round(n.length/2,0)]}this.probes=t.probes,this.paths=t.paths,$("#controls .game-controls").addClass("finish"),this.simulationMode||(this.gameFinished=!0,this.gameX=this.Canvas.coordToCenteredPosition(this.map.startX),this.gameY=this.Canvas.coordToCenteredPosition(this.map.startY));let n=`<span class='coords'>(${this.destX},${this.destY})</span>`;n+=`<div class='result'>        \n        <span class='lang'>JS</span>\n        <span class='time'>${e} ms</span>\n    </div>`,$("#controls .game-controls .results").html(""),$("#controls .game-controls .results").append(n)},O.prototype.destinationSet=function(t,e){this.simulationMode||(this.gameFinished?console.log("game finished"):(this.destX=t,this.destY=e,this.init(),this.runAlgorithm()))},O.prototype.toggleSimulationMode=function(){this.simulationMode=!this.simulationMode,this.init()},O.prototype.resetSimulation=function(){this.init()},O.prototype.resetGame=function(){this.destX=-1,this.destY=-1,this.init()},O.prototype.mapChanged=function(t){this.simulationMode||(this.destX=-1,this.destY=-1),this.selectedMapIndex=t,this.init()},O.prototype.algorithmChanged=function(t){this.simulationMode||(this.destX=-1,this.destY=-1),this.selectedAlgorithmIndex=t,this.init()},O.prototype.preload=function(){this.Canvas.preload()},O.prototype.setup=function(){this.init()},O.prototype.draw=function(){let t,e,n,r;this.simulationMode?(t=this.map.destX,e=this.map.destY):(t=this.destX,e=this.destY,this.moveStart()),this.gameFinished?(n=this.gameX,r=this.gameY):(n=this.Canvas.coordToCenteredPosition(this.map.startX),r=this.Canvas.coordToCenteredPosition(this.map.startY)),this.Canvas.draw(this.simulationMode,this.gameFinished,t,e,this.probes,this.paths,n,r)},O.prototype.moveStart=function(){if(0==this.paths.length)return;let t=this.paths[this.paths.length-1-this.gameMoveInx];t||(t=this.paths[0]);let e=this.Canvas.coordToCenteredPosition(t.x),n=this.Canvas.coordToCenteredPosition(t.y),r=10,i=e-this.gameX;Math.abs(i)<10&&0!=i&&(r=Math.abs(i));let o=n-this.gameY;Math.abs(o)<10&&0!=o&&(r=Math.abs(o)),e>this.gameX?this.gameX+=r:e<this.gameX?this.gameX-=r:n>this.gameY?this.gameY+=r:n<this.gameY?this.gameY-=r:this.gameMoveInx++};var T=O;$(document).ready((function(){new p5(t=>{let e=new T(t);t.preload=()=>{e.preload()},t.setup=()=>{e.setup()},t.draw=()=>{e.draw()}})}))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,